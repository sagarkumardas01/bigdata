## Internal table =~ Managed table.
# Use this command to get details about seriaazion and deserialization
     describe formatted table_name
---------------------------------
Parquet Table Storage information
---------------------------------
SerDe Library:          org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
InputFormat:            org.apache.hadoop.mapred.TextInputFormat ----> Parquet Serde
OutputFormat:           org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat ---> Parquet Serde
Compressed:             No
---------------------------------    
create table csv_table
    > (name string,
    > location string
    > )
    > row format serde 'org.apache.hadoop.hive.serde2.OpenCSVSerde'
    > with serdeproperties(
    > "separatorChar" = ",",
    > "quoteChar" = "\"",
    > "escapeChar" = "\\"
    > )
    > stored as textfile
    > tblproperties("skip.header.line.count" = "1");
    
    
    RAW DATA
    ---------
    Sagar,"PDP,Odisha"
    Amit,"Banglore,Karnatak"
    --------------------------
    
    JSON File Format
    ---------------------
    file
    ----
    {"name": "Sagar", "id": 100, "Skills":["Hadoop","Python"]}
    
    Download hive catalog jar file if serde file is not imported
     Google search for -> https://repo1.maven.org/maven2/org/apache/hive/hcatalog/hive-hcatalog-core/0.14.0/
     
    #Add jar file into hive shell
    hive> add jar jar file location -> /tmp/hive_class
    hive> add jar /tmp/hive_class/hive-catalog-core-0.14.0.jar
    
    #Download Sales_Order.csv from below link
    
    https://github.com/shashank-mishra219/Hive-Class/blob/main/sales_order_data.csv
    
    create table sales_data_static_part                                                                                                     
    > (                                                                                                                                       
    > ORDERNUMBER int,                                                                                                                        
    > QUANTITYORDERED int,                                                                                                                    
    > SALES float,                                                                                                                            
    > YEAR_ID int                                                                                                                             
    > )                                                                                                                                       
    > partitioned by (COUNTRY string); 
    
# load data in static partition

insert overwrite table sales_data_static_part partition(country = 'USA') select ordernumber,quantityordered,sales,year_id from sales_ord
er_data_orc where country = 'USA';

# set this property for dynamic partioning
set hive.exec.dynamic.partition.mode=nonstrict; 


# multilevel partition

create table sales_data_dynamic_multilevel_part_v1                                                                                      
    > (
    > ORDERNUMBER int,                                                                                                                        
    > QUANTITYORDERED int,                                                                                                                    
    > SALES float                                                                                                                             
    > )
    > partitioned by (COUNTRY string, YEAR_ID int); 
    
# load data in multilevel partitions

insert overwrite table sales_data_dynamic_multilevel_part_v1 partition(country,year_id) select ordernumber,quantityordered,sales,country
,year_id from sales_order_data_orc;
    
    
    
    
